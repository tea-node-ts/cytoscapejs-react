export interface IRenderingProps {
    /**
     * 不借助GUI实现对应的功能。在浏览器中如果想使用一个没有界面的cy实例时，可以设置headless: true，但是在隐式headless环境（如：node.js）中不需要设置此属性
     */
    headless?: boolean
    /**
     * 是否使用样式。在headless环境，不需要设置样式，可以通过禁用样式来提升性能。特殊情况下，可以在headless环境中手动启用样式。注意，在有界面的情况下，禁用样式是没有意义的。还需要注意，如果在headless环境中启用了样式，需要调用cy.destroy()来清除cy实例
     */
    styleEnabled?: boolean
    /**
     * 设置为true时，在操作视窗时不渲染边。这会提高大型图形在平移、缩放、拖拽时的响应速度。由于性能增强，这个属性现在基本上没有什么实际意义
     */
    hideEdgesOnViewport?: boolean
    /**
     * 当设置为true时，在平移和缩放过程中将使用纹理而不是绘制元素，从而提升大型图形的响应速度。由于性能增强，这个属性现在基本上没有什么实际意义
     */
    textureOnViewport?: boolean
    /**
     * 当设置为true时，渲染器会使用一个运动模糊效果，使帧之间的转换看起来更平滑。由于性能增强，这个属性现在基本上没有什么实际意义
     */
    motionBlur?: boolean
    /**
     * 当motionBlur: true时，该值控制运动模糊帧的不透明度。较高的数值使运动模糊效果更加明显。由于性能增强，这个属性现在基本上没有什么实际意义。
     */
    motionBlurOpacity?: number
    /**
     * 缩放时滚轮的灵敏度。这是一个乘法修饰语。因此，0到1之间的值会降低灵敏度(放大速度变慢)，而大于1的值会增加灵敏度(放大速度变快)。这个选项设置为一个合理的值，适用于Linux、Mac和Windows上的主流鼠标(苹果、罗技、微软)。如果默认值在你的特定系统上看起来太快或太慢，你可能在你的操作系统或小众鼠标中有非默认的鼠标设置。除非你的应用程序只能在特定的硬件上工作，否则你不应该改变这个值。否则，对于大多数用户来说，你可能会让缩放速度过快或过慢。
     */
    wheelSensitivity?: number
    /**
     * 用手动设置的值覆盖屏幕像素比率(如果设置，建议1.0)。这可以通过减少需要渲染的有效区域来提高高密度显示的性能，不过在最近的浏览器版本中，这就没那么必要了。如果你想使用硬件的实际像素比率，你可以设置pixelRatio: 'auto'(默认)。
     */
    pixelRatio?: string
}
